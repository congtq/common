# -*- mode: ruby -*-
# vi: set ft=ruby :

#------------------------------------------------------------------------------
# Vagrant file for CentOS 7 with Hyper-V as provider on Windows 10
# enable file sharing with Samba
#------------------------------------------------------------------------------

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'hyperv'

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.
  config.vm.provider "hyperv" do |hpv|
    # https://www.vagrantup.com/docs/hyperv/configuration.html

    # cpus (integer) - Number of virtual CPUs allocated to VM at startup.
    hpv.cpus = 1
  end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    alias ll="ls --time-style='+%Y-%m-%d %H:%M:%S' -AlFh --color"
    LL_ALIAS_COMMAND='alias ll="ls --time-style='"'"'+%Y-%m-%d %H:%M:%S'"'"' -AlFh --color"'
    echo "">>~/.bashrc
    echo "${LL_ALIAS_COMMAND}">>~/.bashrc

    sudo yum -y update
    sudo yum -y install samba samba-client samba-common

    (echo vagrant; echo vagrant) | sudo smbpasswd -a vagrant

    sudo mkdir -p /vagrantshare
    sudo chmod -R 0775 /vagrantshare
    sudo chown -R vagrant:vagrant /vagrantshare
    sudo chcon -R -t samba_share_t /vagrantshare
    sudo setsebool -P samba_enable_home_dirs on

    sudo cp -pf /etc/samba/smb.conf /etc/samba/smb.conf.org
    sudo bash -c "echo '' >> /etc/samba/smb.conf"
    sudo bash -c "echo '[shared]' >> /etc/samba/smb.conf"
    sudo bash -c "echo '    path = /vagrantshare' >> /etc/samba/smb.conf"
    sudo bash -c "echo '    valid users = @vagrant' >> /etc/samba/smb.conf"
    sudo bash -c "echo '    guest ok = no' >> /etc/samba/smb.conf"
    sudo bash -c "echo '    writable = yes' >> /etc/samba/smb.conf"
    sudo bash -c "echo '    browsable = yes' >> /etc/samba/smb.conf"

    sudo systemctl enable smb
    sudo systemctl enable nmb
    sudo systemctl restart smb
    sudo systemctl restart nmb
  SHELL
end

# use 'vagrant ssh-config' to find out IP
# Samba share folder
# Folder: \\<IP_address>\shared
# Username: SAMBA\vagrant
# Password: vagrant
